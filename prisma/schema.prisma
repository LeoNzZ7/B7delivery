generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String

  User_Addresses User_Addresses[]
  Bag            Bag?
  Orders         Orders[]

  @@map("users")
}

model User_Addresses {
  id           Int     @id @default(autoincrement())
  id_user      Int
  street       String
  house_number Int
  zipcode      Int
  city         String
  state        String
  complement   String?
  active       String

  user   User     @relation(fields: [id_user], references: [id])
  Orders Orders[]

  @@map("users_addresses")
}

model Tenant {
  id          Int    @id @default(autoincrement())
  name        String @unique
  slug        String @unique
  mainColor   String @unique
  secondColor String @unique

  bag     Bag[]
  product Product[]
  Banners Banners[]
  Orders  Orders[]

  @@map("tenants")
}

model Banners {
  id        Int    @id @default(autoincrement())
  id_tenant Int
  image     String

  tenant Tenant @relation(fields: [id_tenant], references: [id])

  @@map("banners")
}

model Product {
  id            Int     @id @default(autoincrement())
  id_tenant     Int
  id_bag        Int?
  name          String
  image         String
  category      String
  quantity      Int
  price         Float
  multiplePrice Float?
  description   String?

  bag           Bag?           @relation(fields: [id_bag], references: [id])
  tenant        Tenant         @relation(fields: [id_tenant], references: [id])
  order_product order_product[]

  @@map("Products")
}

model Bag {
  id        Int @id @default(autoincrement())
  id_user   Int @unique
  id_tenant Int

  user    User      @relation(fields: [id_user], references: [id])
  tenant  Tenant    @relation(fields: [id_tenant], references: [id])
  product Product[]

  @@map("bags")
}

model Orders {
  id                   Int    @id @default(autoincrement())
  id_user              Int
  id_tenant            Int
  id_address           Int
  payment_method       String
  payment_money_return Float
  delivery             Float
  subtotal             Float
  total                Float
  status               String

  Address       User_Addresses  @relation(fields: [id_address], references: [id])
  Tenant        Tenant          @relation(fields: [id_tenant], references: [id])
  User          User            @relation(fields: [id_user], references: [id])
  order_product order_product[]
  order_statues order_statues[]
}

model order_product {
  id          Int @id @default(autoincrement())
  id_order    Int
  id_products Int @unique
  quantity    Int

  products Product @relation(fields: [id_products], references: [id])
  order    Orders  @relation(fields: [id_order], references: [id])

  @@map("orders_products")
}

model order_statues {
  id         Int      @id @default(autoincrement())
  id_order   Int
  status     String
  created_at DateTime @default(now())

  order Orders @relation(fields: [id_order], references: [id])
}
